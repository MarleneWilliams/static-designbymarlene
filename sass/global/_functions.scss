@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function pem($pxval, $base: 16) {
  @return strip-unit($pxval) / $base * 1em;
}

// Put emCalc in so it can be used
$em-base: 16 !default;
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}

